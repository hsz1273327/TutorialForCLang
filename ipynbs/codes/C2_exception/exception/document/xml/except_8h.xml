<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="except_8h" kind="file" language="C++">
    <compoundname>except.h</compoundname>
    <includes local="no">setjmp.h</includes>
    <includedby refid="assert_8h" local="yes">include/assert.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>setjmp.h</label>
      </node>
      <node id="4">
        <label>include/except.h</label>
        <link refid="except_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>include/except.h</label>
        <link refid="except_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/assert.h</label>
        <link refid="assert_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_except___t" prot="public">Except_T</innerclass>
    <innerclass refid="struct_except___frame" prot="public">Except_Frame</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="except_8h_1a45e87c4d7dee50346b15c7761b0b340a" prot="public" static="no">
        <name>RAISE</name>
        <param><defname>e</defname></param>
        <initializer>Except_raise(&amp;(e), __FILE__, __LINE__)</initializer>
        <briefdescription>
<para>抛出异常 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/except.h" line="182" column="9" bodyfile="include/except.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8h_1a947ef43f0f0def3fcc050a8df849fd16" prot="public" static="no">
        <name>RERAISE</name>
        <initializer>Except_raise(Except_frame.exception, \
    Except_frame.file, Except_frame.line)</initializer>
        <briefdescription>
<para>重复抛出异常 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/except.h" line="188" column="9" bodyfile="include/except.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8h_1a6a0e6b80dd3d5ca395cf58151749f5e2" prot="public" static="no">
        <name>RETURN</name>
        <initializer>switch (<ref refid="except_8h_1a3d38c6361ecf1c4873bbcb2de8a50874" kindref="member">Except_stack</ref> = <ref refid="except_8h_1a3d38c6361ecf1c4873bbcb2de8a50874" kindref="member">Except_stack</ref>-&gt;prev, 0) \
    default:                                      \
        return</initializer>
        <briefdescription>
<para>返回 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/except.h" line="195" column="9" bodyfile="include/except.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8h_1ad2746371528bdf15c3910b7bf217dac0" prot="public" static="no">
        <name>TRY</name>
        <initializer>do {                                        \
        volatile int Except_flag;               \
        <ref refid="struct_except___frame" kindref="compound">Except_Frame</ref> Except_frame;              \
        Except_frame.prev = <ref refid="except_8h_1a3d38c6361ecf1c4873bbcb2de8a50874" kindref="member">Except_stack</ref>;       \
        <ref refid="except_8h_1a3d38c6361ecf1c4873bbcb2de8a50874" kindref="member">Except_stack</ref> = &amp;Except_frame;           \
        Except_flag = setjmp(Except_frame.env); \
        if (Except_flag == <ref refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55ba388ad603a03109702c508bd464b66da2" kindref="member">Except_entered</ref>) {</initializer>
        <briefdescription>
<para>Try关键字 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/except.h" line="204" column="9" bodyfile="include/except.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8h_1ab5e72fc2bd41014c75e0ace4feabfe8e" prot="public" static="no">
        <name>EXCEPT</name>
        <param><defname>e</defname></param>
        <initializer>if (Except_flag == <ref refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55ba388ad603a03109702c508bd464b66da2" kindref="member">Except_entered</ref>)       \
        <ref refid="except_8h_1a3d38c6361ecf1c4873bbcb2de8a50874" kindref="member">Except_stack</ref> = <ref refid="except_8h_1a3d38c6361ecf1c4873bbcb2de8a50874" kindref="member">Except_stack</ref>-&gt;prev;   \
    }                                        \
    else if (Except_frame.exception == &amp;(e)) \
    {                                        \
        Except_flag = <ref refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55bac0d9956bf062b2f2db1f9294563e73b4" kindref="member">Except_handled</ref>;</initializer>
        <briefdescription>
<para>EXCEPT关键字 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/except.h" line="217" column="9" bodyfile="include/except.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8h_1a0a70ee0cbf5b1738be4c9463c529ce72" prot="public" static="no">
        <name>ELSE</name>
        <initializer>if (Except_flag == <ref refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55ba388ad603a03109702c508bd464b66da2" kindref="member">Except_entered</ref>)     \
        <ref refid="except_8h_1a3d38c6361ecf1c4873bbcb2de8a50874" kindref="member">Except_stack</ref> = <ref refid="except_8h_1a3d38c6361ecf1c4873bbcb2de8a50874" kindref="member">Except_stack</ref>-&gt;prev; \
    }                                      \
    else                                   \
    {                                      \
        Except_flag = <ref refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55bac0d9956bf062b2f2db1f9294563e73b4" kindref="member">Except_handled</ref>;</initializer>
        <briefdescription>
<para>ELSE关键字 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/except.h" line="229" column="9" bodyfile="include/except.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8h_1a0e2a75478cd44f1666a6aca626c5c50b" prot="public" static="no">
        <name>FINALLY</name>
        <initializer>if (Except_flag == <ref refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55ba388ad603a03109702c508bd464b66da2" kindref="member">Except_entered</ref>)     \
        <ref refid="except_8h_1a3d38c6361ecf1c4873bbcb2de8a50874" kindref="member">Except_stack</ref> = <ref refid="except_8h_1a3d38c6361ecf1c4873bbcb2de8a50874" kindref="member">Except_stack</ref>-&gt;prev; \
    }                                      \
    {                                      \
        if (Except_flag == <ref refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55ba388ad603a03109702c508bd464b66da2" kindref="member">Except_entered</ref>) \
            Except_flag = <ref refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55ba8f2b6b8b0f719ecda31559637209f40b" kindref="member">Except_finalized</ref>;</initializer>
        <briefdescription>
<para>FINALLY关键字 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/except.h" line="241" column="9" bodyfile="include/except.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="except_8h_1ae6628ac788ad213363b89dba9868420b" prot="public" static="no">
        <name>END_TRY</name>
        <initializer>if (Except_flag == <ref refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55ba388ad603a03109702c508bd464b66da2" kindref="member">Except_entered</ref>)     \
        <ref refid="except_8h_1a3d38c6361ecf1c4873bbcb2de8a50874" kindref="member">Except_stack</ref> = <ref refid="except_8h_1a3d38c6361ecf1c4873bbcb2de8a50874" kindref="member">Except_stack</ref>-&gt;prev; \
    }                                      \
    if (Except_flag == <ref refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55ba80cdb3635fb4b8d00925dea5821c9fbb" kindref="member">Except_raised</ref>)      \
        <ref refid="except_8h_1a947ef43f0f0def3fcc050a8df849fd16" kindref="member">RERAISE</ref>;                           \
    }                                      \
    while (0)</initializer>
        <briefdescription>
<para>END_TRY关键字 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/except.h" line="253" column="9" bodyfile="include/except.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="except_8h_1a06fc87d81c62e9abb8790b6e5713c55b" prot="public" static="no" strong="no">
        <type></type>
        <name>@0</name>
        <enumvalue id="except_8h_1a06fc87d81c62e9abb8790b6e5713c55ba388ad603a03109702c508bd464b66da2" prot="public">
          <name>Except_entered</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>进入异常处理块状态 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="except_8h_1a06fc87d81c62e9abb8790b6e5713c55ba80cdb3635fb4b8d00925dea5821c9fbb" prot="public">
          <name>Except_raised</name>
          <briefdescription>
<para>抛出异常处理状态 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="except_8h_1a06fc87d81c62e9abb8790b6e5713c55bac0d9956bf062b2f2db1f9294563e73b4" prot="public">
          <name>Except_handled</name>
          <briefdescription>
<para>异常处理中状态 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="except_8h_1a06fc87d81c62e9abb8790b6e5713c55ba8f2b6b8b0f719ecda31559637209f40b" prot="public">
          <name>Except_finalized</name>
          <briefdescription>
<para>异常处理块结束状态 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/except.h" line="44" column="1" bodyfile="include/except.h" bodystart="44" bodyend="49"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="except_8h_1a98478a2812528f65d7086212661a4bc3" prot="public" static="no">
        <type>struct <ref refid="struct_except___t" kindref="compound">Except_T</ref></type>
        <definition>typedef struct Except_T  Except_T</definition>
        <argsstring></argsstring>
        <name>Except_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/except.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="except_8h_1ae9476933f67b88456bce2b1445851f6f" prot="public" static="no">
        <type>struct <ref refid="struct_except___frame" kindref="compound">Except_Frame</ref></type>
        <definition>typedef struct Except_Frame Except_Frame</definition>
        <argsstring></argsstring>
        <name>Except_Frame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/except.h" line="23" column="1" bodyfile="include/except.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="except_8h_1a3d38c6361ecf1c4873bbcb2de8a50874" prot="public" static="no" mutable="no">
        <type><ref refid="struct_except___frame" kindref="compound">Except_Frame</ref> *</type>
        <definition>Except_Frame* Except_stack</definition>
        <argsstring></argsstring>
        <name>Except_stack</name>
        <briefdescription>
<para>实例化一个异常栈 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/except.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="except_8h_1a02c91dd1cedbfe4b9e31d7775e0ead7f" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_except___t" kindref="compound">Except_T</ref></type>
        <definition>const Except_T Assert_Failed</definition>
        <argsstring></argsstring>
        <name>Assert_Failed</name>
        <briefdescription>
<para>定义Assert_Failed异常 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/except.h" line="52" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="except_8h_1a9199ea10e7cd2cf2422ae8ffa9ac43a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Except_raise</definition>
        <argsstring>(const Except_T *e, const char *file, int line)</argsstring>
        <name>Except_raise</name>
        <param>
          <type>const <ref refid="struct_except___t" kindref="compound">Except_T</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/except.h" line="63" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>异常处理 </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>David R. Hanson </para></simplesect>
<simplesect kind="date"><para>2018-1-9 </para></simplesect>
<simplesect kind="version"><para>0.0.1 </para></simplesect>
<simplesect kind="par"><title>LICENSE MIT</title><para></para></simplesect>
<simplesect kind="par"><title>添加注释 hsz</title><para></para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#ifndef<sp/>EXCEPT_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXCEPT_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;setjmp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>##<sp/>定义的结构</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="struct_except___t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_except___t" kindref="compound">Except_T</ref><sp/>{</highlight></codeline>
<codeline lineno="22" refid="struct_except___t_1a6a35b57fc58f0ba7cc0d4f939dd3f773" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="struct_except___t_1a6a35b57fc58f0ba7cc0d4f939dd3f773" kindref="member">reason</ref>;<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal">}<sp/><ref refid="struct_except___t" kindref="compound">Except_T</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_except___frame" kindref="compound">Except_Frame</ref><sp/><ref refid="struct_except___frame" kindref="compound">Except_Frame</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="struct_except___frame" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_except___frame" kindref="compound">Except_Frame</ref><sp/>{</highlight></codeline>
<codeline lineno="33" refid="struct_except___frame_1a4a5323a9c98b198d171a7f0409f3bbae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_except___frame" kindref="compound">Except_Frame</ref>*<sp/><ref refid="struct_except___frame_1a4a5323a9c98b198d171a7f0409f3bbae" kindref="member">prev</ref>;<sp/></highlight></codeline>
<codeline lineno="34" refid="struct_except___frame_1abce4b8de2bbf7d6fb6ef52d618309264" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>jmp_buf<sp/><ref refid="struct_except___frame_1abce4b8de2bbf7d6fb6ef52d618309264" kindref="member">env</ref>;<sp/></highlight></codeline>
<codeline lineno="35" refid="struct_except___frame_1a4c8d0ea0c9437ede53e8703feefe0dc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="struct_except___frame_1a4c8d0ea0c9437ede53e8703feefe0dc6" kindref="member">file</ref>;<sp/></highlight></codeline>
<codeline lineno="36" refid="struct_except___frame_1aff1099dac68f6f3b8392f2ebe5c8341f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_except___frame_1aff1099dac68f6f3b8392f2ebe5c8341f" kindref="member">line</ref>;<sp/></highlight></codeline>
<codeline lineno="37" refid="struct_except___frame_1a41f49d856fa1e252bc5f7439f6feeaf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_except___t" kindref="compound">Except_T</ref>*<sp/><ref refid="struct_except___frame_1a41f49d856fa1e252bc5f7439f6feeaf8" kindref="member">exception</ref>;<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="45" refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55ba388ad603a03109702c508bd464b66da2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55ba388ad603a03109702c508bd464b66da2" kindref="member">Except_entered</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="46" refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55ba80cdb3635fb4b8d00925dea5821c9fbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55ba80cdb3635fb4b8d00925dea5821c9fbb" kindref="member">Except_raised</ref>,<sp/></highlight></codeline>
<codeline lineno="47" refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55bac0d9956bf062b2f2db1f9294563e73b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55bac0d9956bf062b2f2db1f9294563e73b4" kindref="member">Except_handled</ref>,<sp/></highlight></codeline>
<codeline lineno="48" refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55ba8f2b6b8b0f719ecda31559637209f40b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="except_8h_1a06fc87d81c62e9abb8790b6e5713c55ba8f2b6b8b0f719ecda31559637209f40b" kindref="member">Except_finalized</ref><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_except___frame" kindref="compound">Except_Frame</ref>*<sp/><ref refid="except_8h_1a3d38c6361ecf1c4873bbcb2de8a50874" kindref="member">Except_stack</ref>;<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_except___t" kindref="compound">Except_T</ref><sp/><ref refid="except_8h_1a02c91dd1cedbfe4b9e31d7775e0ead7f" kindref="member">Assert_Failed</ref>;<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>##<sp/>定义函数</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Except_raise(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_except___t" kindref="compound">Except_T</ref>*<sp/>e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Except_index;<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Except_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Except_push(<ref refid="struct_except___frame" kindref="compound">Except_Frame</ref>*<sp/>fp);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Except_pop(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>$Id$<sp/>*/</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor">#define<sp/>RAISE(e)<sp/>Except_raise(&amp;(e),<sp/>__FILE__,<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor">#define<sp/>RERAISE<sp/>Except_raise(Except_frame.exception,<sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Except_frame.file,<sp/>Except_frame.line)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor">#define<sp/>RETURN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>switch<sp/>(Except_pop(),<sp/>0)<sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>default:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor">#define<sp/>TRY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>volatile<sp/>int<sp/>Except_flag;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_Frame<sp/>Except_frame;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Except_index<sp/>==<sp/>-1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_init();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_push(&amp;Except_frame);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_flag<sp/>=<sp/>setjmp(Except_frame.env);<sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Except_flag<sp/>==<sp/>Except_entered)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor">#define<sp/>EXCEPT(e)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(Except_flag<sp/>==<sp/>Except_entered)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_pop();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(Except_frame.exception<sp/>==<sp/>&amp;(e))<sp/>\</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_flag<sp/>=<sp/>Except_handled;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor">#define<sp/>ELSE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(Except_flag<sp/>==<sp/>Except_entered)<sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_pop();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_flag<sp/>=<sp/>Except_handled;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor">#define<sp/>FINALLY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(Except_flag<sp/>==<sp/>Except_entered)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_pop();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Except_flag<sp/>==<sp/>Except_entered)<sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_flag<sp/>=<sp/>Except_finalized;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor">#define<sp/>END_TRY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(Except_flag<sp/>==<sp/>Except_entered)<sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_pop();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(Except_flag<sp/>==<sp/>Except_raised)<sp/><sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RERAISE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="except_8h_1a45e87c4d7dee50346b15c7761b0b340a" refkind="member"><highlight class="preprocessor">#define<sp/>RAISE(e)<sp/>Except_raise(&amp;(e),<sp/>__FILE__,<sp/>__LINE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="except_8h_1a947ef43f0f0def3fcc050a8df849fd16" refkind="member"><highlight class="preprocessor">#define<sp/>RERAISE<sp/>Except_raise(Except_frame.exception,<sp/>\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Except_frame.file,<sp/>Except_frame.line)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="except_8h_1a6a0e6b80dd3d5ca395cf58151749f5e2" refkind="member"><highlight class="preprocessor">#define<sp/>RETURN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>switch<sp/>(Except_stack<sp/>=<sp/>Except_stack-&gt;prev,<sp/>0)<sp/>\</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>default:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="except_8h_1ad2746371528bdf15c3910b7bf217dac0" refkind="member"><highlight class="preprocessor">#define<sp/>TRY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>volatile<sp/>int<sp/>Except_flag;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_Frame<sp/>Except_frame;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_frame.prev<sp/>=<sp/>Except_stack;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_stack<sp/>=<sp/>&amp;Except_frame;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_flag<sp/>=<sp/>setjmp(Except_frame.env);<sp/>\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Except_flag<sp/>==<sp/>Except_entered)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="except_8h_1ab5e72fc2bd41014c75e0ace4feabfe8e" refkind="member"><highlight class="preprocessor">#define<sp/>EXCEPT(e)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(Except_flag<sp/>==<sp/>Except_entered)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_stack<sp/>=<sp/>Except_stack-&gt;prev;<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(Except_frame.exception<sp/>==<sp/>&amp;(e))<sp/>\</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_flag<sp/>=<sp/>Except_handled;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="except_8h_1a0a70ee0cbf5b1738be4c9463c529ce72" refkind="member"><highlight class="preprocessor">#define<sp/>ELSE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(Except_flag<sp/>==<sp/>Except_entered)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_stack<sp/>=<sp/>Except_stack-&gt;prev;<sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_flag<sp/>=<sp/>Except_handled;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="except_8h_1a0e2a75478cd44f1666a6aca626c5c50b" refkind="member"><highlight class="preprocessor">#define<sp/>FINALLY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="242"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(Except_flag<sp/>==<sp/>Except_entered)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_stack<sp/>=<sp/>Except_stack-&gt;prev;<sp/>\</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Except_flag<sp/>==<sp/>Except_entered)<sp/>\</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_flag<sp/>=<sp/>Except_finalized;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="except_8h_1ae6628ac788ad213363b89dba9868420b" refkind="member"><highlight class="preprocessor">#define<sp/>END_TRY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(Except_flag<sp/>==<sp/>Except_entered)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Except_stack<sp/>=<sp/>Except_stack-&gt;prev;<sp/>\</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(Except_flag<sp/>==<sp/>Except_raised)<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RERAISE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/except.h"/>
  </compounddef>
</doxygen>
