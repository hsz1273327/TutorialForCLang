<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="binary__vector_8h" kind="file" language="C++">
    <compoundname>binary_vector.h</compoundname>
    <innerclass refid="struct_b_i_n_a_r_y___v_e_c_t_o_r" prot="public">BINARY_VECTOR</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="binary__vector_8h_1a71520835af03ea1829c1ece3a213176c" prot="public" static="no">
        <name>BINARY_VECTOR_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/binary_vector.h" line="13" column="9" bodyfile="include/binary_vector.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="binary__vector_8h_1a28f57566a48c0ae6d1821e1fdd6f8dfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float VEC_mod</definition>
        <argsstring>(BINARY_VECTOR)</argsstring>
        <name>VEC_mod</name>
        <param>
          <type><ref refid="struct_b_i_n_a_r_y___v_e_c_t_o_r" kindref="compound">BINARY_VECTOR</ref></type>
        </param>
        <briefdescription>
<para>求模 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[vector]</parametername>
</parameternamelist>
<parameterdescription>
<para>要求模的向量 <linebreak/>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float 模的值 </para></simplesect>
<simplesect kind="par"><title>修改日志 </title><para>XXX于201X-XX-XX创建 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/binary_vector.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="binary__vector_8h_1a4878951f2eb0b1682c466594627f8453" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_b_i_n_a_r_y___v_e_c_t_o_r" kindref="compound">BINARY_VECTOR</ref></type>
        <definition>BINARY_VECTOR VEC_add</definition>
        <argsstring>(BINARY_VECTOR, BINARY_VECTOR)</argsstring>
        <name>VEC_add</name>
        <param>
          <type><ref refid="struct_b_i_n_a_r_y___v_e_c_t_o_r" kindref="compound">BINARY_VECTOR</ref></type>
        </param>
        <param>
          <type><ref refid="struct_b_i_n_a_r_y___v_e_c_t_o_r" kindref="compound">BINARY_VECTOR</ref></type>
        </param>
        <briefdescription>
<para>求两个向量的和 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[vector]</parametername>
</parameternamelist>
<parameterdescription>
<para>求和的第一个向量 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[vector]</parametername>
</parameternamelist>
<parameterdescription>
<para>求和的第二个向量 <linebreak/>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_b_i_n_a_r_y___v_e_c_t_o_r" kindref="compound">BINARY_VECTOR</ref> 相加后的向量 </para></simplesect>
<simplesect kind="par"><title>修改日志 </title><para>XXX于201X-XX-XX创建 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/binary_vector.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="binary__vector_8h_1abaace6cc297f934aa9d82334fa3b4a9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float VEC_mul</definition>
        <argsstring>(BINARY_VECTOR, BINARY_VECTOR)</argsstring>
        <name>VEC_mul</name>
        <param>
          <type><ref refid="struct_b_i_n_a_r_y___v_e_c_t_o_r" kindref="compound">BINARY_VECTOR</ref></type>
        </param>
        <param>
          <type><ref refid="struct_b_i_n_a_r_y___v_e_c_t_o_r" kindref="compound">BINARY_VECTOR</ref></type>
        </param>
        <briefdescription>
<para>求积 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[vector]</parametername>
</parameternamelist>
<parameterdescription>
<para>求积的第一个向量 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[vector]</parametername>
</parameternamelist>
<parameterdescription>
<para>求积的第二个向量 <linebreak/>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float 内积的值 </para></simplesect>
<simplesect kind="par"><title>修改日志 </title><para>XXX于201X-XX-XX创建 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/binary_vector.h" line="54" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>binary_vector接口文件 </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>author </para></simplesect>
<simplesect kind="date"><para>2018-1-8 </para></simplesect>
<simplesect kind="version"><para>dev </para></simplesect>
<simplesect kind="par"><title>Copyright (c): </title><para><linebreak/>
 XXX公司 </para></simplesect>
<simplesect kind="par"><title>History: </title><para><linebreak/>
 version: author, date, desc<linebreak/>
 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>BINARY_VECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINARY_VECTOR_H//一般是文件名的大写<sp/>头文件结尾写上一行</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="struct_b_i_n_a_r_y___v_e_c_t_o_r" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20" refid="struct_b_i_n_a_r_y___v_e_c_t_o_r_1a1c7a53e7236dca52117e86e12aa34885" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_b_i_n_a_r_y___v_e_c_t_o_r_1a1c7a53e7236dca52117e86e12aa34885" kindref="member">x</ref>;<sp/></highlight></codeline>
<codeline lineno="21" refid="struct_b_i_n_a_r_y___v_e_c_t_o_r_1ac3333b38944c91de27316a7f0a632373" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_b_i_n_a_r_y___v_e_c_t_o_r_1ac3333b38944c91de27316a7f0a632373" kindref="member">y</ref>;<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal">}<sp/><ref refid="struct_b_i_n_a_r_y___v_e_c_t_o_r" kindref="compound">BINARY_VECTOR</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="binary__vector_8h_1a28f57566a48c0ae6d1821e1fdd6f8dfa" kindref="member">VEC_mod</ref>(<ref refid="struct_b_i_n_a_r_y___v_e_c_t_o_r" kindref="compound">BINARY_VECTOR</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_b_i_n_a_r_y___v_e_c_t_o_r" kindref="compound">BINARY_VECTOR</ref><sp/><ref refid="binary__vector_8h_1a4878951f2eb0b1682c466594627f8453" kindref="member">VEC_add</ref>(<ref refid="struct_b_i_n_a_r_y___v_e_c_t_o_r" kindref="compound">BINARY_VECTOR</ref>,<ref refid="struct_b_i_n_a_r_y___v_e_c_t_o_r" kindref="compound">BINARY_VECTOR</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="binary__vector_8h_1abaace6cc297f934aa9d82334fa3b4a9e" kindref="member">VEC_mul</ref>(<ref refid="struct_b_i_n_a_r_y___v_e_c_t_o_r" kindref="compound">BINARY_VECTOR</ref><sp/>,<ref refid="struct_b_i_n_a_r_y___v_e_c_t_o_r" kindref="compound">BINARY_VECTOR</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/binary_vector.h"/>
  </compounddef>
</doxygen>
